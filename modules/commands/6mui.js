const request = require('request');
const fs = require("fs-extra"); // S·ª≠ d·ª•ng fs-extra ƒë·ªÉ d·ªÖ thao t√°c v·ªõi file
const path = require("path"); // Th√™m module path ƒë·ªÉ qu·∫£n l√Ω ƒë∆∞·ªùng d·∫´n

module.exports.config = {
    name: "6mui",
    version: "4.1.1", // N√¢ng version ƒë·ªÉ ƒë√°nh d·∫•u s·ª≠a l·ªói quan tr·ªçng
    hasPermission: 0,
    credits: "Vtuan (ƒê√£ ƒëi·ªÅu ch·ªânh b·ªüi qh v√† Gemini) üëë", // C·∫≠p nh·∫≠t credit
    description: "üì∏ G·ª≠i ng·∫´u nhi√™n m·ªôt h√¨nh ·∫£nh 6 m√∫i.",
    commandCategory: "·∫¢nh",
    usages: "", // Kh√¥ng c·∫ßn usages v√¨ l·ªánh kh√¥ng c√≥ tham s·ªë
    cooldowns: 10 // Gi·∫£m cooldown cho h·ª£p l√Ω h∆°n
};

module.exports.run = async ({ api, event }) => {
    const { threadID, messageID } = event;

    try {
        // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n t·ªõi file JSON l√† ch√≠nh x√°c
        // ƒê√¢y l√† ƒë∆∞·ªùng d·∫´n ƒë·∫øn file mui.json trong th∆∞ m·ª•c includes/datajson
        const muiDataPath = path.join(__dirname, '..', '..', 'includes', 'datajson', 'mui.json');

        // Ki·ªÉm tra xem file c√≥ t·ªìn t·∫°i kh√¥ng
        if (!fs.existsSync(muiDataPath)) {
            return api.sendMessage("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file d·ªØ li·ªáu h√¨nh ·∫£nh 6 m√∫i (mui.json). Vui l√≤ng ki·ªÉm tra l·∫°i ƒë∆∞·ªùng d·∫´n ho·∫∑c ƒë·∫£m b·∫£o file t·ªìn t·∫°i.", threadID, messageID);
        }

        // ƒê·ªçc d·ªØ li·ªáu t·ª´ file mui.json
        const muiData = fs.readJsonSync(muiDataPath);

        // Ki·ªÉm tra d·ªØ li·ªáu c√≥ h·ª£p l·ªá kh√¥ng
        if (!Array.isArray(muiData) || muiData.length === 0) {
            return api.sendMessage("‚ö†Ô∏è D·ªØ li·ªáu h√¨nh ·∫£nh 6 m√∫i trong file mui.json kh√¥ng h·ª£p l·ªá ho·∫∑c tr·ªëng r·ªóng. Vui l√≤ng ki·ªÉm tra ƒë·ªãnh d·∫°ng file.", threadID, messageID);
        }

        // Ch·ªçn ng·∫´u nhi√™n m·ªôt URL ·∫£nh t·ª´ muiData
        const imageUrl = muiData[Math.floor(Math.random() * muiData.length)].trim();

        if (!imageUrl || !imageUrl.startsWith('http')) { // Ki·ªÉm tra xem c√≥ ph·∫£i l√† URL h·ª£p l·ªá kh√¥ng
            return api.sendMessage("‚ö†Ô∏è URL h√¨nh ·∫£nh kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i d·ªØ li·ªáu trong file mui.json.", threadID, messageID);
        }

        const imageFileName = `6mui_${Date.now()}.png`; // T√™n file ƒë·ªôc ƒë√°o
        const imagePath = path.join(__dirname, 'cache', imageFileName); // L∆∞u v√†o th∆∞ m·ª•c cache

        // ƒê·∫£m b·∫£o th∆∞ m·ª•c cache t·ªìn t·∫°i
        await fs.ensureDir(path.dirname(imagePath));

        // T·∫£i v√† l∆∞u ·∫£nh
        request(imageUrl).pipe(fs.createWriteStream(imagePath))
            .on("close", () => {
                // G·ª≠i ·∫£nh
                api.sendMessage({
                    attachment: fs.createReadStream(imagePath)
                }, threadID, (error) => {
                    // X√≥a file ·∫£nh t·∫°m sau khi g·ª≠i
                    fs.unlink(imagePath, (err) => {
                        if (err) console.error("‚ùå L·ªói khi x√≥a file ·∫£nh t·∫°m:", err);
                    });
                    if (error) {
                        console.error("‚ùå L·ªói khi g·ª≠i ·∫£nh 6 m√∫i:", error);
                        return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi g·ª≠i h√¨nh ·∫£nh. Vui l√≤ng th·ª≠ l·∫°i sau.", threadID, messageID);
                    }
                }, messageID);
            })
            .on("error", (err) => {
                console.error("‚ùå L·ªói khi t·∫£i ·∫£nh 6 m√∫i:", err);
                api.sendMessage("‚ùå Kh√¥ng th·ªÉ t·∫£i h√¨nh ·∫£nh t·ª´ ngu·ªìn. Vui l√≤ng th·ª≠ l·∫°i sau. C√≥ th·ªÉ link ·∫£nh b·ªã h·ªèng.", threadID, messageID);
                // ƒê·∫£m b·∫£o x√≥a file t·∫°m n·∫øu c√≥ l·ªói trong qu√° tr√¨nh t·∫£i
                fs.unlink(imagePath, (unlinkErr) => {
                    if (unlinkErr) console.error("‚ùå L·ªói khi x√≥a file ·∫£nh t·∫°m sau l·ªói t·∫£i:", unlinkErr);
                });
            });

    } catch (error) {
        console.error("‚ùå L·ªói trong qu√° tr√¨nh th·ª±c thi l·ªánh 6mui:", error);
        api.sendMessage(`ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu. Chi ti·∫øt: ${error.message}`, threadID, messageID);
    }
};