module.exports.config = { // S·ª≠a 'this.config' th√†nh 'module.exports.config'
  name: "contact",
  version: "1.0.1", // N√¢ng version l√™n x√≠u ‚¨ÜÔ∏è
  hasPermssion: 0,
  credits: "DongDev, modded by qh and Gemini ‚ú®", // K√≠ t√™n chung cho ng·∫ßu üòé
  description: "chia s·∫ª contact c·ªßa th√†nh vi√™n trong nh√≥m üìû", // Ch·ªØ th∆∞·ªùng, vi·∫øt hoa ƒë·∫ßu d√≤ng + icon
  commandCategory: "ti·ªán √≠ch üõ†Ô∏è", // Ch·ªØ th∆∞·ªùng, vi·∫øt hoa ƒë·∫ßu d√≤ng + icon
  usages: "[reply/tag/id]", // G·ª£i √Ω c√°ch d√πng ƒëa d·∫°ng h∆°n
  cooldowns: 5
};

module.exports.run = async ({ api, event, args, global }) => { // S·ª≠a 'this.run' th√†nh 'module.exports.run' v√† th√™m 'global' v√†o destructuring
  const { shareContact } = api;
  const { threadID, messageReply, senderID, mentions, type } = event;

  let targetID;

  // ∆Øu ti√™n reply
  if (type === "message_reply") {
      targetID = messageReply.senderID;
  } 
  // Sau ƒë√≥ ƒë·∫øn tag
  else if (Object.keys(mentions).length > 0) {
      targetID = Object.keys(mentions)[0].replace(/&mibextid=\w+/g, ''); // Fix regex cho t·ªïng qu√°t h∆°n
  } 
  // Ti·∫øp ƒë·∫øn l√† ID n·∫øu c√≥ trong args
  else if (args[0] && !isNaN(args[0])) {
      targetID = args[0];
  }
  // Cu·ªëi c√πng, n·∫øu kh√¥ng c√≥ g√¨, l·∫•y ID c·ªßa ng∆∞·ªùi g·ª≠i l·ªánh
  else {
      targetID = senderID;
  }

  // N·∫øu ng∆∞·ªùi d√πng nh·∫≠p t√™n m√† kh√¥ng tag/reply, th·ª≠ t√¨m UID
  // C·∫ßn c√≥ global.utils.getUID n·∫øu mu·ªën d√πng t√≠nh nƒÉng n√†y
  if (!targetID && args[0]) {
      try {
          targetID = await global.utils.getUID(args.join(" "));
      } catch (error) {
          console.error("L·ªói khi t√¨m UID t·ª´ t√™n:", error);
          return api.sendMessage("Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†y ho·∫∑c c√≥ l·ªói x·∫£y ra. Vui l√≤ng reply, tag ho·∫∑c cung c·∫•p ID ch√≠nh x√°c nh√©! ‚ö†Ô∏è", threadID); // Ch·ªØ th∆∞·ªùng, vi·∫øt hoa ƒë·∫ßu d√≤ng + icon
      }
  }

  // Ki·ªÉm tra n·∫øu kh√¥ng t√¨m th·∫•y targetID cu·ªëi c√πng
  if (!targetID) {
      return api.sendMessage("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh ƒë·ªëi t∆∞·ª£ng ƒë·ªÉ chia s·∫ª contact. Vui l√≤ng reply tin nh·∫Øn, tag ng∆∞·ªùi b·∫°n mu·ªën, ho·∫∑c nh·∫≠p ID c·ªßa h·ªç nh√©! ü§î", threadID); // Ch·ªØ th∆∞·ªùng, vi·∫øt hoa ƒë·∫ßu d√≤ng + icon
  }

  // G·ª≠i contact
  shareContact("", targetID, threadID); // N·ªôi dung tin nh·∫Øn r·ªóng, ch·ªâ g·ª≠i contact
  api.sendMessage(`ƒê√£ chia s·∫ª contact c·ªßa ${targetID} cho b·∫°n. üì¨`, threadID); // Th√™m tin nh·∫Øn th√¥ng b√°o
};